#!/usr/bin/env python

import argparse
import os
import random
import subprocess

################################################################################
# Configuration                                                                #
################################################################################

wallpapers_directory = os.path.expanduser('~') + '/.wallpaper'
if not os.path.isdir(wallpapers_directory):
    os.mkdir(wallpapers_directory)

################################################################################
# Utility functions                                                            #
################################################################################

def feh_set_wallpaper(path):
    '''Call feh to set the wallpaper'''
    subprocess.call(['feh', '--bg-fill', path])

def list_wallpapers():
    '''Returns full paths to all wallpapers'''
    for basename in os.listdir(wallpapers_directory):
        yield wallpapers_directory + '/' + basename

################################################################################
# Command handlers                                                             #
################################################################################

def handle_set(args):
    '''Handler for the set subcommand'''
    feh_set_wallpaper(args.file)

def handle_random(args):
    '''Handler for the random subcommand'''
    wallpapers = list(list_wallpapers())
    if not wallpapers:
        raise Exception('No wallpapers in ' + wallpapers_directory)
    path = random.choice(wallpapers)
    feh_set_wallpaper(path)
    print('Wallpaper set to: ' + path)

def handle_add(args):
    '''Handler for the add subcommand'''
    source = os.path.abspath(args.file)
    basename = os.path.basename(source)
    destination = wallpapers_directory + '/' + basename
    if os.path.isfile(destination):
        raise Exception('File already exists: ' + destination)
    os.symlink(source, destination)
    print('Added: ' + destination)

################################################################################
# Argument parsing                                                             #
################################################################################

parser = argparse.ArgumentParser()
subparsers = parser.add_subparsers()

parser_set = subparsers.add_parser(name='set')
parser_set.add_argument('file', metavar='FILE')
parser_set.set_defaults(handler=handle_set)

parser_random = subparsers.add_parser(name='random')
parser_random.set_defaults(handler=handle_random)

parser_add = subparsers.add_parser(name='add')
parser_add.add_argument('file', metavar='FILE')
parser_add.set_defaults(handler=handle_add)

args = parser.parse_args()
args.handler(args)
