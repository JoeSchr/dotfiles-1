#!/usr/bin/python

import PIL.ExifTags
import PIL.Image
import argparse
import os
import random
import subprocess
import time

for tag, name in PIL.ExifTags.TAGS.items():
    if name == 'Orientation':
        EXIF_ORIENTATION_TAG = tag

def is_viable_wallpaper(path):
    _, ext = os.path.splitext(path)
    if not ext.lower() in ['.jpg', '.png']:
        return False

    with PIL.Image.open(path) as image:
        exif = image._getexif()
        rotated = False
        if exif and EXIF_ORIENTATION_TAG in exif:
            orientation = exif[EXIF_ORIENTATION_TAG]
            if orientation in [3, 8]:
                rotated = True

        if rotated:
            return image.height > image.width
        else:
            return image.width > image.height

def gen_wallpapers(wallpapers_file):
    '''Yield all possible wallpapers.'''
    if not os.path.isfile(wallpapers_file):
        return

    def list_wallpapers_for_file(path):
        if os.path.isdir(path):
            for entry in os.scandir(path):
                if entry.is_file() and is_viable_wallpaper(entry.path):
                    yield entry.path
                else:
                    for wall in list_wallpapers_for_file(entry.path):
                        yield wall
        elif os.path.isfile(path) and is_viable_wallpaper(path):
            yield path

    with open(wallpapers_file, 'r') as f:
        for path in f.readlines():
            path = os.path.expandvars(path.strip())
            for wall in list_wallpapers_for_file(path):
                yield wall

def pick(generator):
    '''This picks a random element from any generator'''
    best = None
    best_score = 0
    for item in generator:
        score = random.random()
        if score > best_score:
            best = item
            best_score = score
    return best

def feh_set_wallpaper(path):
    '''Call feh to set the wallpaper'''
    subprocess.call(['feh', '--bg-fill', path])

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Set random wallpapers')
    parser.add_argument('-d', '--daemon', action='store_true')
    args = parser.parse_args()

    wallpapers_file = os.path.expanduser('~/.wallpapers')

    if args.daemon:
        wallpapers_list = list(gen_wallpapers(wallpapers_file))
        while True:
            chosen = pick(wallpapers_list)
            feh_set_wallpaper(chosen)
            time.sleep(5 * 60)
    else:
        wallpapers_gen = gen_wallpapers(wallpapers_file)
        chosen = pick(wallpapers_gen)
        feh_set_wallpaper(chosen)
